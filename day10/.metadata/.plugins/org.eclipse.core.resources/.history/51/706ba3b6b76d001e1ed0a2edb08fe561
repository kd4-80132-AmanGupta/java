package com.assignment;

import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;
import java.util.Scanner;

public class Test {
	public static void main(String args[]) {
		
		Scanner sc = new Scanner(System.in);
		int choice = sc.nextInt();
		
		List<Book> listofBook = new ArrayList<>();
		ListIterator<Book> itr;
		Book b;
		
		
		do {
			System.out.println("1. Add new book in List");
//			If book not present, then add a new book (hint - contains())");
//		    If book is present, increment its quantity.
		    System.out.println("2. Display all books in forward order using random access");
			System.out.println("3. Search a book with given isbn (hint - indexOf())");
			System.out.println("4. Delete a book at given index.");
			System.out.println("5. Delete a book with given isbn.");
			System.out.println("6. Reverse the list (hint - Collections.reverseList())");
			
			switch(choice) {
			case 1 : b = new Book();
			         b.acceptBookDetails(sc);
			        
			         if(listofBook.contains(b)) {
			        	int index = listofBook.indexOf(b);
			        Book b1= listofBook.get(index);
			             b1.setQuantity(b1.getQuantity()+1);			        	
			         }
			         else 
			        	 listofBook.add(b);
			         

				break;
				
			case 2 :for(int i=0;i<listofBook.size();++i) {
				    System.out.println(listofBook.get(i));
			}
				break;
				
			case 3 :System.out.println("enter isbn of book to search");
			         String isbn = sc.next();
			         Book bk = new Book();
			         bk.setIsbn(isbn);
			         int index = listofBook.indexOf(bk);
			         
			        if(index!=-1)
			        	System.out.println(listofBook.get(index)); 
			        else
			        	System.out.println("book not found");
			    	
				break;
				
			case 4 :System.out.println("enter the index to delete that book");
			         int index1 = sc.nextInt();
			         listofBook.remove(index1);
				break;
				
			case 5 :System.out.println("enter the isbn to delete book");
			        String isbn1 = sc.next();
	                Book b2 = new Book();
	                b2.setIsbn(isbn1);
	                int indexx = listofBook.indexOf(b2);
	                listofBook.remove(indexx);
				break;
				
			case 6 : itr = listofBook.listIterator(listofBook.size());
			         while(itr.hasPrevious()) {
			        	b = itr.previous();
			        	System.out.println(b); 
			         }
				break;
			}
			
		}while(choice!=0);
		 sc.close();
	}

	
}
